{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactOwnApi/frontend/src/App.js\";\nimport React from 'react';\nimport Moment from 'moment';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  // Now we're going to make a request for data using axios\n  getPosts() {\n    axios.get(\"http://localhost:3210/users\").then(response => {\n      return response.data.map(user => ({\n        event_status: \"\".concat(user.event_status),\n        id: \"\".concat(user.id),\n        event_venue: \"\".concat(user.event_venue),\n        event_date: \"\".concat(user.event_date)\n      }));\n    }).then(response => {\n      return axios.get(\"http://localhost:3210/data\").then(response => {\n        return response.data.map(event => ({\n          event_id: \"\".concat(event.event_id),\n          id: \"\".concat(event.id),\n          cover_image: \"\".concat(event.cover_image)\n        }));\n      });\n    }).then(events => {\n      console.log(events);\n      this.setState({\n        events,\n        isLoading: false\n      }); // console.log(this.state)\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.getPosts();\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          users = _this$state.users,\n          events = _this$state.events;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Random User\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, !isLoading ? events && events.map(event => {\n      return React.createElement(\"div\", {\n        key: event.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, data.event_id), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, data.id)), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/ReactOwnApi/frontend/src/App.js"],"names":["React","Moment","axios","App","Component","state","posts","isLoading","errors","getPosts","get","then","response","data","map","user","event_status","id","event_venue","event_date","event","event_id","cover_image","events","console","log","setState","catch","error","componentDidMount","render","users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADwB;AAAA;;AAMhC;AACAC,EAAAA,QAAQ,GAAG;AACTP,IAAAA,KAAK,CACFQ,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,IAAI,KAAI;AAC/BC,QAAAA,YAAY,YAAKD,IAAI,CAACC,YAAV,CADmB;AAE/BC,QAAAA,EAAE,YAAKF,IAAI,CAACE,EAAV,CAF6B;AAG/BC,QAAAA,WAAW,YAAKH,IAAI,CAACG,WAAV,CAHoB;AAI/BC,QAAAA,UAAU,YAAKJ,IAAI,CAACI,UAAV;AAJqB,OAAJ,CAAtB,CAAP;AAMD,KATH,EAUGR,IAVH,CAUQC,QAAQ,IAAI;AAChB,aAAOV,KAAK,CACXQ,GADM,CACF,4BADE,EAENC,IAFM,CAEDC,QAAQ,IAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBM,KAAK,KAAI;AAChCC,UAAAA,QAAQ,YAAKD,KAAK,CAACC,QAAX,CADwB;AAEhCJ,UAAAA,EAAE,YAAKG,KAAK,CAACH,EAAX,CAF8B;AAGhCK,UAAAA,WAAW,YAAKF,KAAK,CAACE,WAAX;AAHqB,SAAJ,CAAvB,CAAP;AAKD,OARM,CAAP;AASD,KApBH,EAsBGX,IAtBH,CAsBQY,MAAM,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAKG,QAAL,CAAc;AACZH,QAAAA,MADY;AAEZhB,QAAAA,SAAS,EAAE;AAFC,OAAd,EAFc,CAMd;AACD,KA7BH,EA8BGoB,KA9BH,CA8BSC,KAAK,IAAI,KAAKF,QAAL,CAAc;AAAEE,MAAAA,KAAF;AAASrB,MAAAA,SAAS,EAAE;AAApB,KAAd,CA9BlB;AA+BD;;AAEDsB,EAAAA,iBAAiB,GAAG;AAClB,SAAKpB,QAAL;AACD;;AAEDqB,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKzB,KADnC;AAAA,UACCE,SADD,eACCA,SADD;AAAA,UACYwB,KADZ,eACYA,KADZ;AAAA,UACoBR,MADpB,eACoBA,MADpB;AAGP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAChB,SAAD,GACCgB,MAAM,IAAIA,MAAM,CAACT,GAAP,CAAWM,KAAK,IAAI;AAE5B,aACE;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACH,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,IAAI,CAACQ,QAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIR,IAAI,CAACI,EAAT,CADF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD,KAZS,CADX,GAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBJ,CAFF,CADF;AAwBD;;AAxE+B;;AA0ElC,eAAed,GAAf","sourcesContent":["import React from 'react';\nimport Moment from 'moment';\nimport axios from 'axios';\n\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    isLoading: true,\n    errors: null,\n  };\n  // Now we're going to make a request for data using axios\n  getPosts() {\n    axios\n      .get(\"http://localhost:3210/users\")\n      .then(response => {\n        return response.data.map(user=> ({\n          event_status: `${user.event_status}`,\n          id: `${user.id}`,\n          event_venue: `${user.event_venue}`,\n          event_date: `${user.event_date}`\n        }))\n      })\n      .then(response => {\n        return axios\n        .get(\"http://localhost:3210/data\")\n        .then(response => {\n          return response.data.map(event=> ({\n            event_id: `${event.event_id}`,\n            id: `${event.id}`,\n            cover_image: `${event.cover_image}`\n          }))\n        })\n      })\n      \n      .then(events => {\n        console.log(events)\n        this.setState({\n          events,\n          isLoading: false,\n        });\n        // console.log(this.state)\n      })\n      .catch(error => this.setState({ error, isLoading: false }));   \n  }\n  \n  componentDidMount() {\n    this.getPosts();\n  }\n\n  render() {\n    const { isLoading, users , events} = this.state;\n    \n    return (\n      <React.Fragment>\n        <h2>Random User</h2>\n        <div>\n          {!isLoading ? (\n            events && events.map(event => {\n             \n              return (\n                <div key={event.id}>\n                  <p>{data.event_id}</p>\n                  <div>\n                    <p>{data.id}</p>\n                  </div>\n                  \n                  <hr />\n                </div>\n              );\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default App; "]},"metadata":{},"sourceType":"module"}