{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactOwnApi/frontend/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  // Now we're going to make a request for data using axios\n  componentDidMount() {\n    axios.get(\"https://randomuser.me/api/?results=5\").then(response => response.data.results.map(user => ({\n      name: \"\".concat(user.name.first, \" \").concat(user.name.last),\n      username: \"\".concat(user.login.username),\n      email: \"\".concat(user.email),\n      image: \"\".concat(user.picture.thumbnail)\n    }))).then(users => {\n      this.setState({\n        users,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  } // Putting that data to use\n\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          posts = _this$state.posts;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Random Post\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, !isLoading ? posts && posts.map(post => {\n      const id = post.id,\n            event_title = post.event_title,\n            event_venue = post.event_venue;\n      return React.createElement(\"div\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, event_title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, event_venue), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/ReactOwnApi/frontend/src/App.js"],"names":["React","axios","App","Component","state","posts","isLoading","errors","componentDidMount","get","then","response","data","results","map","user","name","first","last","username","login","email","image","picture","thumbnail","users","setState","catch","error","render","post","id","event_title","event_venue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADwB;AAAA;;AAMhC;AACAC,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,KAAK,CACFQ,GADH,CACO,sCADP,EAEGC,IAFH,CAEQC,QAAQ,IACZA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0BC,IAAI,KAAK;AACjCC,MAAAA,IAAI,YAAKD,IAAI,CAACC,IAAL,CAAUC,KAAf,cAAwBF,IAAI,CAACC,IAAL,CAAUE,IAAlC,CAD6B;AAEjCC,MAAAA,QAAQ,YAAKJ,IAAI,CAACK,KAAL,CAAWD,QAAhB,CAFyB;AAGjCE,MAAAA,KAAK,YAAKN,IAAI,CAACM,KAAV,CAH4B;AAIjCC,MAAAA,KAAK,YAAKP,IAAI,CAACQ,OAAL,CAAaC,SAAlB;AAJ4B,KAAL,CAA9B,CAHJ,EAUGd,IAVH,CAUQe,KAAK,IAAI;AACb,WAAKC,QAAL,CAAc;AACZD,QAAAA,KADY;AAEZnB,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAfH,EAgBGqB,KAhBH,CAgBSC,KAAK,IAAI,KAAKF,QAAL,CAAc;AAAEE,MAAAA,KAAF;AAAStB,MAAAA,SAAS,EAAE;AAApB,KAAd,CAhBlB;AAiBD,GAzB+B,CA0BhC;;;AACAuB,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKzB,KAD3B;AAAA,UACCE,SADD,eACCA,SADD;AAAA,UACYD,KADZ,eACYA,KADZ;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACC,SAAD,GACCD,KAAK,IAAIA,KAAK,CAACS,GAAN,CAAUgB,IAAI,IAAI;AAAA,YACjBC,EADiB,GACgBD,IADhB,CACjBC,EADiB;AAAA,YACbC,WADa,GACgBF,IADhB,CACbE,WADa;AAAA,YACAC,WADA,GACgBH,IADhB,CACAG,WADA;AAEzB,aACE;AAAK,QAAA,GAAG,EAAEF,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMC,WAAN,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,WAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD,KATQ,CADV,GAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,CAFF,CADF;AAqBD;;AAlD+B;;AAoDlC,eAAe/B,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    isLoading: true,\n    errors: null\n  };\n  // Now we're going to make a request for data using axios\n  componentDidMount() {\n    axios\n      .get(\"https://randomuser.me/api/?results=5\")\n      .then(response =>\n        response.data.results.map(user => ({\n          name: `${user.name.first} ${user.name.last}`,\n          username: `${user.login.username}`,\n          email: `${user.email}`,\n          image: `${user.picture.thumbnail}`\n        }))\n      )\n      .then(users => {\n        this.setState({\n          users,\n          isLoading: false\n        });\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  // Putting that data to use\n  render() {\n    const { isLoading, posts } = this.state;\n    return (\n      <React.Fragment>\n        <h2>Random Post</h2>\n        <div>\n          {!isLoading ? (\n            posts && posts.map(post => {\n              const { id, event_title, event_venue } = post;\n              return (\n                <div key={id}>\n                  <h2>{ event_title}</h2>\n                  <p>{event_venue}</p>\n                  <hr />\n                </div>\n              );\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default App; "]},"metadata":{},"sourceType":"module"}