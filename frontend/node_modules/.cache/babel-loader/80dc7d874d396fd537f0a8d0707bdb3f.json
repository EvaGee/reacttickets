{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactOwnApi/frontend/src/App.js\";\nimport React from 'react';\nimport Moment from 'moment';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  // Now we're going to make a request for data using axios\n  getPosts() {\n    axios.get(\"http://localhost:3210/users\").then(response => {\n      return response.data.map(user => ({\n        event_status: \"\".concat(user.event_status),\n        id: \"\".concat(user.id),\n        event_venue: \"\".concat(user.event_venue),\n        event_date: \"\".concat(user.event_date)\n      }));\n    }).then(users => {\n      console.log(users);\n      this.setState({\n        users,\n        isLoading: false\n      }); // console.log(this.state)\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  getData() {\n    axios.get(\"http://localhost:3210/data\").then(response => {\n      return response.data.map(data => ({\n        event_status: \"\".concat(data.e),\n        id: \"\".concat(data.id),\n        event_venue: \"\".concat(data.event_venue),\n        event_date: \"\".concat(data.event_date)\n      }));\n    }).then(users => {\n      console.log(users);\n      this.setState({\n        users,\n        isLoading: false\n      }); // console.log(this.state)\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.getPosts();\n    this.getData();\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          users = _this$state.users;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Random User\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, !isLoading ? users && users.map(user => {\n      if (user.event_status == 1 && Moment() < Moment(user.event_date)) {\n        return React.createElement(\"div\", {\n          key: user.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, user.event_status), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, user.event_venue)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, user.event_date), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }));\n      }\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/ReactOwnApi/frontend/src/App.js"],"names":["React","Moment","axios","App","Component","state","posts","isLoading","errors","getPosts","get","then","response","data","map","user","event_status","id","event_venue","event_date","users","console","log","setState","catch","error","getData","e","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Moment from 'moment';\nimport axios from 'axios';\n\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    isLoading: true,\n    errors: null,\n  };\n  // Now we're going to make a request for data using axios\n  getPosts() {\n    axios\n      .get(\"http://localhost:3210/users\")\n      .then(response => {\n        return response.data.map(user=> ({\n          event_status: `${user.event_status}`,\n          id: `${user.id}`,\n          event_venue: `${user.event_venue}`,\n          event_date: `${user.event_date}`\n          \n        }))\n      })\n      .then(users => {\n        console.log(users)\n        this.setState({\n          users,\n          isLoading: false,\n        });\n        // console.log(this.state)\n      })\n      .catch(error => this.setState({ error, isLoading: false }));   \n  }\n  getData() {\n    axios\n      .get(\"http://localhost:3210/data\")\n      .then(response => {\n        return response.data.map(data=> ({\n          event_status: `${data.e}`,\n          id: `${data.id}`,\n          event_venue: `${data.event_venue}`,\n          event_date: `${data.event_date}`\n          \n        }))\n      })\n      .then(users => {\n        console.log(users)\n        this.setState({\n          users,\n          isLoading: false,\n        });\n        // console.log(this.state)\n      })\n      .catch(error => this.setState({ error, isLoading: false }));   \n  }\n \n\n  componentDidMount() {\n    this.getPosts();\n    this.getData();\n  }\n\n  render() {\n    const { isLoading, users } = this.state;\n    \n    return (\n      <React.Fragment>\n        <h2>Random User</h2>\n        <div>\n          {!isLoading ? (\n            users && users.map(user => {\n              if(user.event_status==1 && Moment()<Moment(user.event_date)){\n              return (\n                <div key={user.id}>\n                  <p>{user.event_status}</p>\n                  <div>\n                    <p>{user.event_venue}</p>\n                  </div>\n                  <p>{user.event_date}</p>\n                  <hr />\n                </div>\n              );}\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default App; "]},"metadata":{},"sourceType":"module"}